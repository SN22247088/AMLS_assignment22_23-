#Import Libraries 
#General 
import pandas
import numpy as np

#Image/Data processing 
from PIL import Image

#sklearn
from sklearn.model_selection import train_test_split
from sklearn.linear_model import SGDClassifier
from sklearn.metrics import accuracy_score
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import KFold, cross_val_score 
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import ConfusionMatrixDisplay 
import matplotlib.pyplot as plt 


#Load the training Data 
#importing the labeled csv

features = pandas.read_csv('/Users/samreenabbas/Downloads/ML Coursework/dataset_AMLS_22-23/cartoon_set/labels.csv', delimiter = '\t')
ytrain = features["face_shape"].values
#reducing training data size due to reduce computation time 
trainsize = 1000

#importing the images
xtrain = []
for i in range(len(ytrain)):
    img = Image.open("/Users/samreenabbas/Downloads/ML Coursework/dataset_AMLS_22-23/cartoon_set/img/" + str(i) + ".png")
    img = np.array(img).flatten()
    xtrain.append(img)


#Loading the test data
features = pandas.read_csv('/Users/samreenabbas/Downloads/ML Coursework/dataset_AMLS_22-23_test/cartoon_set_test/labels.csv', delimiter = '\t')
ytest = features["face_shape"].values

#importing the images
xtest = []
for i in range(len(ytest)):
    img = Image.open("/Users/samreenabbas/Downloads/ML Coursework/dataset_AMLS_22-23_test/cartoon_set_test/img/" + str(i) + ".png")
    img = np.array(img).flatten()
    xtest.append(img)


#training
clf = RandomForestClassifier()
clf.fit(xtrain[0:trainsize], ytrain[0:trainsize])


#testing
y_pred = clf.predict(xtest)
mat = confusion_matrix(ytest, y_pred)
print('Accuracy: {:.2f}'.format(accuracy_score(ytest, y_pred)))
print(classification_report(ytest, y_pred))
print('Confusion Matrix:')
display = ConfusionMatrixDisplay(confusion_matrix = mat, display_labels = None)
display.plot()
plt.show()
